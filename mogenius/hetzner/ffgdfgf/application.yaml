apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ffgdfgf
  namespace: mogenius-argo-cd
  labels:
    managed-by: mogenius
spec:
  destination:
    name: in-cluster
    namespace: janstestspace
  syncPolicy:
    automated:
      prune: true
  project: mogenius
  source:
    repoURL: https://helm.mogenius.com/public
    targetRevision: 1.2.2
    chart: moac
    helm:
      releaseName: ffgdfgf
      valuesObject:
        ingresses:
          - ingress-mycontainer:
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
              labels:
                mo-app: mycontainer
              ingressClassName: traefik
              rules:
                - host: mycontainer-u3tw13.test.com
                  http:
                    paths:
                      - backend:
                          service:
                            name: mycontainer
                            port:
                              number: 80
                        path: /
                        pathType: Prefix
              tls:
                - hosts:
                    - mycontainer-u3tw13.test.com
                  secretName: mycontainer-tls
        services:
          - mycontainer:
              clusterIP: 10.43.124.185
              clusterIPs:
                - 10.43.124.185
              internalTrafficPolicy: Cluster
              ipFamilies:
                - IPv4
              ipFamilyPolicy: SingleStack
              ports:
                - name: 80-mycontainer
                  port: 80
                  protocol: TCP
                  targetPort: 80
              selector:
                app: mycontainer
              sessionAffinity: None
              type: ClusterIP
        rawResources:
          - apiVersion: apps/v1
            kind: Deployment
            metadata:
              annotations:
                gitBranch: ''
                gitRepository: ''
              name: mycontainer
              namespace: janstestspace
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: mycontainer
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  labels:
                    app: mycontainer
                spec:
                  containers:
                    - image: nginx:latest
                      imagePullPolicy: Always
                      name: nginx
                      resources: {}
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  securityContext: {}
                  terminationGracePeriodSeconds: 30
