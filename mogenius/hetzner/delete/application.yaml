apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: delete
  namespace: mogenius-argo-cd
  labels:
    managed-by: mogenius
spec:
  destination:
    name: in-cluster
    namespace: default
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
  project: mogenius
  source:
    repoURL: https://helm.mogenius.com/public
    targetRevision: 1.2.2
    chart: moac
    helm:
      releaseName: delete
      valuesObject:
        services:
          - my-deployment:
              clusterIP: 10.43.109.67
              clusterIPs:
                - 10.43.109.67
              internalTrafficPolicy: Cluster
              ipFamilies:
                - IPv4
              ipFamilyPolicy: SingleStack
              ports:
                - name: 80-my-deployment
                  port: 80
                  protocol: TCP
                  targetPort: 80
              selector:
                app: my-deployment
              sessionAffinity: None
              type: ClusterIP
          - kubernetes:
              labels:
                component: apiserver
                provider: kubernetes
              clusterIP: 10.43.0.1
              clusterIPs:
                - 10.43.0.1
              internalTrafficPolicy: Cluster
              ipFamilies:
                - IPv4
              ipFamilyPolicy: SingleStack
              ports:
                - name: https
                  port: 443
                  protocol: TCP
                  targetPort: 6443
              sessionAffinity: None
              type: ClusterIP
        rawResources:
          - apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: my-deployment
              namespace: default
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: my-deployment
              strategy:
                rollingUpdate:
                  maxSurge: 25%
                  maxUnavailable: 25%
                type: RollingUpdate
              template:
                metadata:
                  labels:
                    app: my-deployment
                spec:
                  containers:
                    - image: nginx:latest
                      imagePullPolicy: Always
                      name: my-container
                      terminationMessagePath: /dev/termination-log
                      terminationMessagePolicy: File
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  terminationGracePeriodSeconds: 30
          - apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              annotations:
                pv.kubernetes.io/bind-completed: 'yes'
                pv.kubernetes.io/bound-by-controller: 'yes'
                volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
                volume.kubernetes.io/selected-node: test-server-sami
                volume.kubernetes.io/storage-provisioner: rancher.io/local-path
              finalizers:
                - kubernetes.io/pvc-protection
              labels:
                app.kubernetes.io/component: primary
                app.kubernetes.io/name: postgresql
              name: data-chainloop-postgresql-0
              namespace: default
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 8Gi
              storageClassName: local-path
              volumeMode: Filesystem
              volumeName: pvc-09473f2e-a961-4dd9-a72d-4179bdf4a859
          - apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              annotations:
                pv.kubernetes.io/bind-completed: 'yes'
                pv.kubernetes.io/bound-by-controller: 'yes'
                volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
                volume.kubernetes.io/selected-node: test-server-sami
                volume.kubernetes.io/storage-provisioner: rancher.io/local-path
              finalizers:
                - kubernetes.io/pvc-protection
              labels:
                app: my-app
              name: my-pvc-my-statefulset-0
              namespace: default
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
              storageClassName: local-path
              volumeMode: Filesystem
              volumeName: pvc-8058e0dc-ab96-4dfd-9da8-40aaa535a4c7
          - apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              annotations:
                pv.kubernetes.io/bind-completed: 'yes'
                pv.kubernetes.io/bound-by-controller: 'yes'
                volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
                volume.kubernetes.io/selected-node: test-server-sami
                volume.kubernetes.io/storage-provisioner: rancher.io/local-path
              finalizers:
                - kubernetes.io/pvc-protection
              labels:
                app.kubernetes.io/component: server
                app.kubernetes.io/name: vault
                app.kubernetes.io/part-of: vault
              name: data-chainloop-vault-server-0
              namespace: default
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
              storageClassName: local-path
              volumeMode: Filesystem
              volumeName: pvc-5f3bfebe-3ba7-4c61-8948-7d55c2dde2dd
        ingresses:
          - ingress-prometheus-kube-prometheus-stack-prometheus:
              labels:
                mo-app: prometheus-kube-prometheus-stack-prometheus
              ingressClassName: traefik
              rules:
                - host: prometheus.188.245.192.56.nip.io
                  http:
                    paths:
                      - backend:
                          service:
                            name: prometheus-kube-prometheus-stack-prometheus
                            port:
                              number: 80
                        path: /
                        pathType: Prefix
